{
  "AssignmentExpression": [
    "left",
    "right"
  ],
  "ArrayExpression": [
    "elements"
  ],
  "ArrowFunctionExpression": [
    "params",
    "body"
  ],
  "BlockStatement": [
    "body"
  ],
  "BinaryExpression": [
    "left",
    "right"
  ],
  "BreakStatement": [
    "label"
  ],
  "CallExpression": [
    "callee",
    "arguments"
  ],
  "CatchClause": [
    "param",
    "body"
  ],
  "ConditionalExpression": [
    "test",
    "consequent",
    "alternate"
  ],
  "ContinueStatement": [
    "label"
  ],
  "DebuggerStatement": [],
  "DirectiveStatement": [],
  "DoWhileStatement": [
    "body",
    "test"
  ],
  "EmptyStatement": [],
  "ExportNamedDeclaration": [
    "declaration",
    "specifiers",
    "source"
  ],
  "ExportAllDeclaration": [
    "source"
  ],
  "ExportDefaultDeclaration": [
    "declaration"
  ],
  "ExportSpecifier": [
    "exported"
  ],
  "ExpressionStatement": [
    "expression"
  ],
  "ForStatement": [
    "init",
    "test",
    "update",
    "body"
  ],
  "ForInStatement": [
    "left",
    "right",
    "body"
  ],
  "FunctionDeclaration": [
    "id",
    "params",
    "body"
  ],
  "FunctionExpression": [
    "id",
    "params",
    "body"
  ],
  "Identifier": [],
  "IfStatement": [
    "test",
    "consequent",
    "alternate"
  ],
  "ImportDeclaration": [
    "specifiers",
    "source"
  ],
  "ImportSpecifier": [
    "imported"
  ],
  "ImportDefaultSpecifier": [],
  "ImportNamespaceSpecifier": [],
  "Literal": [],
  "LabeledStatement": [
    "label",
    "body"
  ],
  "LogicalExpression": [
    "left",
    "right"
  ],
  "MemberExpression": [
    "object",
    "property"
  ],
  "NewExpression": [
    "callee",
    "arguments"
  ],
  "ObjectExpression": [
    "properties"
  ],
  "Program": [
    "body"
  ],
  "Property": [
    "key",
    "value"
  ],
  "ReturnStatement": [
    "argument"
  ],
  "SequenceExpression": [
    "expressions"
  ],
  "SwitchStatement": [
    "discriminant",
    "cases"
  ],
  "SwitchCase": [
    "test",
    "consequent"
  ],
  "ThisExpression": [],
  "ThrowStatement": [
    "argument"
  ],
  "TryStatement": [
    "block",
    "handlers",
    "handler",
    "guardedHandlers",
    "finalizer"
  ],
  "UnaryExpression": [
    "argument"
  ],
  "UpdateExpression": [
    "argument"
  ],
  "VariableDeclaration": [
    "declarations"
  ],
  "VariableDeclarator": [
    "id",
    "init"
  ],
  "WhileStatement": [
    "test",
    "body"
  ],
  "WithStatement": [
    "object",
    "body"
  ],
  "YieldExpression": [
    "argument"
  ]
}